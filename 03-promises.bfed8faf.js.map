{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAsCb,MAAMQ,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAlCtB,SAA0BC,GACxBA,EAAMC,iBAGN,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEJC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAaF,OAAOJ,EAAKK,OACzBE,EAAcH,OAAOH,EAAOI,OAGlCzB,EAAA4B,OAAOC,KAAK,YAAYF,iBAGxB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAaG,IAAK,CAGpC5B,EAFiB4B,EAAI,EACPP,EAAaO,EAAIJ,GAE5BK,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjB4B,QAAQC,IAAI,uBAAqB9B,QAAiBC,OAClDJ,EAAA4B,OAAOM,QAAQ,uBAAqB/B,QAAiBC,MAAU,IAEhE+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB4B,QAAQC,IAAI,sBAAoB9B,QAAiBC,OACjDJ,EAAA4B,OAAOQ,QAAQ,sBAAoBjC,QAAeC,MAAU,IAE7DiC,SAAQ,IAAMzB,EAAK0B,S","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// function to create a promise with random success or failure\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// function to handle form submission and create promises\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  // get user inputs from form fields\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const firstDelay = Number(delay.value);\n  const delaySteep = Number(step.value);\n  const amountInput = Number(amount.value);\n\n  // create and display a notification to the user\n  Notify.info(`Creating ${amountInput} promises...`);\n\n  // create promises and handle fulfillment/rejection\n  for (let i = 0; i < amountInput; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * delaySteep;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => form.reset());\n  }\n}\n\n// add event listener to form submit event\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleFormSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","elements","delay2","step","amount","currentTarget","firstDelay","Number","value","delaySteep","amountInput","Notify","info","i","then","console","log","success","catch","failure","finally","reset"],"version":3,"file":"03-promises.bfed8faf.js.map"}